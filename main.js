!function(){"use strict";var t=JSON.parse('{"x3":55662.915227979305,"KH":31087,"hW":[{"name":"Afghanistan","latitude":33.93911,"longitude":67.709953,"random_position":6,"optimized_position":0},{"name":"Antarctica","latitude":-75.250973,"longitude":-0.071389,"random_position":2,"optimized_position":3},{"name":"Australia","latitude":-25.274398,"longitude":133.775136,"random_position":7,"optimized_position":2},{"name":"Bolivia","latitude":-16.290154,"longitude":-63.588653,"random_position":0,"optimized_position":4},{"name":"Central African Republic","latitude":6.611111,"longitude":20.939444,"random_position":3,"optimized_position":8},{"name":"France","latitude":46.227638,"longitude":2.213749,"random_position":8,"optimized_position":7},{"name":"Greenland","latitude":71.706936,"longitude":-42.604303,"random_position":5,"optimized_position":6},{"name":"Russia","latitude":61.52401,"longitude":105.318756,"random_position":1,"optimized_position":1},{"name":"United States","latitude":37.09024,"longitude":-95.712891,"random_position":4,"optimized_position":5}]}');const e=L.map("map").setView([51.505,-.09],2),o=[];L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(e);const i=L.icon({iconUrl:"a29e914295e0187548c7.png",iconSize:[35,48],iconAnchor:[10,20],popupAnchor:[5,-20]});t.hW.forEach((t=>{L.marker([t.latitude,t.longitude],{icon:i}).addTo(e).bindPopup(t.name).openPopup(),o.push([t.latitude,t.longitude,t.optimized_position])}));const n=o.sort(((t,e)=>t[2]-e[2]));L.polyline(n).addTo(e),document.querySelector(".map__distance_type_before").textContent=`${Math.round(t.x3)} mi`,document.querySelector(".map__distance_type_after").textContent=`${Math.round(t.KH)} mi`;const s=document.forms.form,r=document.querySelector(".popup-confirm"),a=[];new class{constructor(t,e){this._options=t,this._form=e}_hasInvalidInput(t){return t.some((t=>!t.validity.valid))}_showInputError(t){const e=this._form.querySelector(`.${t.id}-error`);t.classList.add(this._options.inputErrorClass),e.classList.add(this._options.errorClass),e.textContent=t.validationMessage}_hideInputError(t){const e=this._form.querySelector(`.${t.id}-error`);t.classList.remove(this._options.inputErrorClass),e.classList.remove(this._options.errorClass),e.textContent=""}_checkInputValidity(t){t.validity.valid?this._hideInputError(t,this._options):this._showInputError(t,this._options)}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._options.inputSelector)),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t)}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners(this._form,this._options)}}({formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},s).enableValidation();const p=new class{constructor(t){this._popup=t,this._button=this._popup.querySelector(".popup__btn")}open(){this._popup.classList.add("popup_opened"),this.setEventListeners()}close=()=>{this._popup.classList.remove("popup_opened"),this.removeEventListeners()};setEventListeners(){this._button.addEventListener("click",this.close),document.addEventListener("mousedown",this._handleOverlayClick),document.addEventListener("keydown",this._handleEscKeydown)}removeEventListeners(){this._closeButton.removeEventListener("click",this.close),document.removeEventListener("mousedown",this._handleOverlayClick),document.removeEventListener("keydown",this._handleEscKeydown)}_handleOverlayClick=t=>{t.target.classList.contains("popup_opened")&&this.close()};_handleEscKeydown=t=>{"Escape"===t.key&&this.close()}}(r),d=new class{constructor(t,e){this._form=t,this._handleSubmit=e,this._formInputs=this._form.querySelectorAll(".form__input")}_getInputValues(){const t={};return this._formInputs.forEach((e=>{t[e.name]=e.value})),t}setInputValues(t){this._formInputs.forEach((e=>{e.value=t[e.name]}))}setEventListeners(){this._form.addEventListener("submit",this._handleSubmitForm)}_handleSubmitForm=t=>{this._handleSubmit(this._getInputValues()),t.preventDefault()};reset(){this._form.reset()}}(s,(()=>{p.open(),a.push(d._getInputValues()),d.reset()}));d.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFBLEdBQ0VyQyxLQUFLRSxNQUFNeUIsaUJBQWlCLFNBQVUzQixLQUFLc0Qsa0JBQzdDLENBRUFBLGtCQUFxQnpCLElBQ25CN0IsS0FBS2lELGNBQWNqRCxLQUFLbUQsbUJBQ3hCdEIsRUFBSUMsZ0JBQWdCLEVBR3RCeUIsS0FBQUEsR0FDRXZELEtBQUtFLE1BQU1xRCxPQUNiLEdIdUIwQjdELEdBQU0sS0FDaEN1QyxFQUFhRyxPQUNidkMsRUFBWWYsS0FBS2lFLEVBQVdJLG1CQUM1QkosRUFBV1EsT0FBTyxJQUdwQlIsRUFBV1YsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qaW5nbGUtYmVsbHMtamFtL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2ppbmdsZS1iZWxscy1qYW0vLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vamluZ2xlLWJlbGxzLWphbS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vamluZ2xlLWJlbGxzLWphbS8uL3NyYy9jb21wb25lbnRzL1BvcHVwQ29uZmlybS5qcyIsIndlYnBhY2s6Ly9qaW5nbGUtYmVsbHMtamFtLy4vc3JjL2NvbXBvbmVudHMvRm9ybS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IHNhbnRhIGZyb20gXCIuLi9pbWFnZXMvc2FudGEucG5nXCI7XHJcbmltcG9ydCBkYXRhIGZyb20gXCIuLi9zY3JpcHRzL2RhdGEuanNvblwiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwQ29uZmlybS5qc1wiO1xyXG5cclxuY29uc3QgbWFwID0gTC5tYXAoXCJtYXBcIikuc2V0VmlldyhbNTEuNTA1LCAtMC4wOV0sIDIpO1xyXG5jb25zdCBwYXRoID0gW107XHJcblxyXG5MLnRpbGVMYXllcihcImh0dHBzOi8vdGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmdcIiwge1xyXG4gIGF0dHJpYnV0aW9uOlxyXG4gICAgJyZjb3B5OyA8YSBocmVmPVwiaHR0cHM6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0XCI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJyxcclxufSkuYWRkVG8obWFwKTtcclxuXHJcbmNvbnN0IHNhbnRhSWNvbiA9IEwuaWNvbih7XHJcbiAgaWNvblVybDogc2FudGEsXHJcbiAgaWNvblNpemU6IFszNSwgNDhdLFxyXG4gIGljb25BbmNob3I6IFsxMCwgMjBdLFxyXG4gIHBvcHVwQW5jaG9yOiBbNSwgLTIwXSxcclxufSk7XHJcblxyXG5kYXRhLmNvdW50cmllcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgTC5tYXJrZXIoW2l0ZW0ubGF0aXR1ZGUsIGl0ZW0ubG9uZ2l0dWRlXSwgeyBpY29uOiBzYW50YUljb24gfSlcclxuICAgIC5hZGRUbyhtYXApXHJcbiAgICAuYmluZFBvcHVwKGl0ZW0ubmFtZSlcclxuICAgIC5vcGVuUG9wdXAoKTtcclxuICBwYXRoLnB1c2goW2l0ZW0ubGF0aXR1ZGUsIGl0ZW0ubG9uZ2l0dWRlLCBpdGVtLm9wdGltaXplZF9wb3NpdGlvbl0pO1xyXG59KTtcclxuXHJcbmNvbnN0IG9wdGltYWxQYXRoID0gcGF0aC5zb3J0KChhLCBiKSA9PiBhWzJdIC0gYlsyXSk7XHJcbmNvbnN0IHBvbHlsaW5lID0gTC5wb2x5bGluZShvcHRpbWFsUGF0aCkuYWRkVG8obWFwKTtcclxuXHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIubWFwX19kaXN0YW5jZV90eXBlX2JlZm9yZVwiXHJcbikudGV4dENvbnRlbnQgPSBgJHtNYXRoLnJvdW5kKGRhdGEudG90YWxfZGlzdGFuY2VfcmFuZG9tKX0gbWlgO1xyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1hcF9fZGlzdGFuY2VfdHlwZV9hZnRlclwiKS50ZXh0Q29udGVudCA9IGAke01hdGgucm91bmQoXHJcbiAgZGF0YS50b3RhbF9kaXN0YW5jZV9vcHRcclxuKX0gbWlgO1xyXG5jb25zdCBmb3JtID0gZG9jdW1lbnQuZm9ybXMuZm9ybTtcclxuY29uc3QgcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwLWNvbmZpcm1cIik7XHJcbmNvbnN0IGRhdGFMZXR0ZXJzID0gW107XHJcblxyXG5jb25zdCBvcHRpb25zID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogXCIuZm9ybVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLmZvcm1fX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLmZvcm1fX2J1dHRvblwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJmb3JtX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJmb3JtX19pbnB1dC1lcnJvcl9hY3RpdmVcIixcclxufTtcclxuXHJcbmNvbnN0IGZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihvcHRpb25zLCBmb3JtKTtcclxuZm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5jb25zdCBwb3B1cENvbmZpcm0gPSBuZXcgUG9wdXAocG9wdXApO1xyXG5cclxuY29uc3QgZm9ybUxldHRlciA9IG5ldyBGb3JtKGZvcm0sICgpID0+IHtcclxuICBwb3B1cENvbmZpcm0ub3BlbigpO1xyXG4gIGRhdGFMZXR0ZXJzLnB1c2goZm9ybUxldHRlci5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgZm9ybUxldHRlci5yZXNldCgpO1xyXG59KTtcclxuXHJcbmZvcm1MZXR0ZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucywgZm9ybSkge1xyXG4gICAgdGhpcy5fb3B0aW9ucyA9IG9wdGlvbnM7XHJcbiAgICB0aGlzLl9mb3JtID0gZm9ybTtcclxuICB9XHJcblxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XHJcbiAgICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9vcHRpb25zLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9vcHRpb25zLmVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9vcHRpb25zLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9vcHRpb25zLmVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIHRoaXMuX29wdGlvbnMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50LCB0aGlzLl9vcHRpb25zKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oXHJcbiAgICAgIHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9vcHRpb25zLmlucHV0U2VsZWN0b3IpXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKHRoaXMuX2Zvcm0sIHRoaXMuX29wdGlvbnMpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXApIHtcclxuICAgIHRoaXMuX3BvcHVwID0gcG9wdXA7XHJcbiAgICB0aGlzLl9idXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idG5cIik7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5lZFwiKTtcclxuXHJcbiAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSA9ICgpID0+IHtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9idXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuY2xvc2UpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCB0aGlzLl9oYW5kbGVPdmVybGF5Q2xpY2spO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjS2V5ZG93bik7XHJcbiAgfVxyXG5cclxuICByZW1vdmVFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2Nsb3NlQnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmNsb3NlKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5faGFuZGxlT3ZlcmxheUNsaWNrKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0tleWRvd24pO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZU92ZXJsYXlDbGljayA9IChldnQpID0+IHtcclxuICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX29wZW5lZFwiKSkge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgX2hhbmRsZUVzY0tleWRvd24gPSAoZXZ0KSA9PiB7XHJcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtIHtcclxuICBjb25zdHJ1Y3Rvcihmb3JtLCBoYW5kbGVTdWJtaXQpIHtcclxuICAgIHRoaXMuX2Zvcm0gPSBmb3JtO1xyXG4gICAgdGhpcy5faGFuZGxlU3VibWl0ID0gaGFuZGxlU3VibWl0O1xyXG4gICAgdGhpcy5fZm9ybUlucHV0cyA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5mb3JtX19pbnB1dFwiKTtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIGNvbnN0IGRhdGEgPSB7fTtcclxuICAgIHRoaXMuX2Zvcm1JbnB1dHMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICBkYXRhW2l0ZW0ubmFtZV0gPSBpdGVtLnZhbHVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGRhdGE7XHJcbiAgfVxyXG5cclxuICBzZXRJbnB1dFZhbHVlcyhkYXRhKSB7XHJcbiAgICB0aGlzLl9mb3JtSW5wdXRzLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgaXRlbS52YWx1ZSA9IGRhdGFbaXRlbS5uYW1lXTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgdGhpcy5faGFuZGxlU3VibWl0Rm9ybSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlU3VibWl0Rm9ybSA9IChldnQpID0+IHtcclxuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIH07XHJcblxyXG4gIHJlc2V0KCkge1xyXG4gICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsibWFwIiwiTCIsInNldFZpZXciLCJwYXRoIiwidGlsZUxheWVyIiwiYXR0cmlidXRpb24iLCJhZGRUbyIsInNhbnRhSWNvbiIsImljb24iLCJpY29uVXJsIiwiaWNvblNpemUiLCJpY29uQW5jaG9yIiwicG9wdXBBbmNob3IiLCJkYXRhIiwiaXRlbSIsIm1hcmtlciIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwiYmluZFBvcHVwIiwibmFtZSIsIm9wZW5Qb3B1cCIsInB1c2giLCJvcHRpbWl6ZWRfcG9zaXRpb24iLCJvcHRpbWFsUGF0aCIsInNvcnQiLCJhIiwiYiIsInBvbHlsaW5lIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJNYXRoIiwicm91bmQiLCJmb3JtIiwiZm9ybXMiLCJwb3B1cCIsImRhdGFMZXR0ZXJzIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwidGhpcyIsIl9vcHRpb25zIiwiX2Zvcm0iLCJfaGFzSW52YWxpZElucHV0IiwiaW5wdXRMaXN0Iiwic29tZSIsImlucHV0RWxlbWVudCIsInZhbGlkaXR5IiwidmFsaWQiLCJfc2hvd0lucHV0RXJyb3IiLCJlcnJvckVsZW1lbnQiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oaWRlSW5wdXRFcnJvciIsInJlbW92ZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJmb3JFYWNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsImVuYWJsZVZhbGlkYXRpb24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsImZvcm1TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwicG9wdXBDb25maXJtIiwiX3BvcHVwIiwiX2J1dHRvbiIsIm9wZW4iLCJzZXRFdmVudExpc3RlbmVycyIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lcnMiLCJfaGFuZGxlT3ZlcmxheUNsaWNrIiwiX2hhbmRsZUVzY0tleWRvd24iLCJfY2xvc2VCdXR0b24iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwidGFyZ2V0IiwiY29udGFpbnMiLCJrZXkiLCJmb3JtTGV0dGVyIiwiaGFuZGxlU3VibWl0IiwiX2hhbmRsZVN1Ym1pdCIsIl9mb3JtSW5wdXRzIiwiX2dldElucHV0VmFsdWVzIiwidmFsdWUiLCJzZXRJbnB1dFZhbHVlcyIsIl9oYW5kbGVTdWJtaXRGb3JtIiwicmVzZXQiXSwic291cmNlUm9vdCI6IiJ9